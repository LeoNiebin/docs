{
  "openapi": "3.0.1",
  "info": {
    "title": "Blogseo",
    "description": null,
    "version": ""
  },
  "tags": [],
  "paths": {
    "/me": {
      "get": {
        "summary": "Get authenticated user",
        "deprecated": false,
        "description": "Gets information about the authenticated user.",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "fullName": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "isPublic": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "fullName",
                        "avatar",
                        "isPublic"
                      ]
                    },
                    "operations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "limit": {
                            "type": "integer"
                          },
                          "usage": {
                            "type": "integer"
                          },
                          "overage": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "limit",
                          "usage",
                          "overage"
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "operations"
                  ]
                },
                "example": {
                  "user": {
                    "id": 12345678,
                    "username": "taylor-lee",
                    "email": "taylor.lee@example.com",
                    "fullName": "Taylor Lee",
                    "avatar": "https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg",
                    "isPublic": true
                  },
                  "operations": [
                    {
                      "name": "mock_usage",
                      "limit": 1000000,
                      "usage": 110276,
                      "overage": 0
                    },
                    {
                      "name": "monitor_request_runs",
                      "limit": 10000000,
                      "usage": 1141750,
                      "overage": 0
                    },
                    {
                      "name": "api_usage",
                      "limit": 1000000,
                      "usage": 16240,
                      "overage": 0
                    },
                    {
                      "name": "custom_domains",
                      "limit": 25,
                      "usage": 25,
                      "overage": 0
                    },
                    {
                      "name": "serverless_requests",
                      "limit": 10000,
                      "usage": 0,
                      "overage": 0
                    },
                    {
                      "name": "integrations",
                      "limit": 5000,
                      "usage": 1018,
                      "overage": 0
                    },
                    {
                      "name": "cloud_agent_requests",
                      "limit": 1000000,
                      "usage": 1615,
                      "overage": 0
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/collections": {
      "post": {
        "summary": "Create a collection",
        "deprecated": false,
        "description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).",
        "tags": [],
        "parameters": [
          {
            "name": "workspace",
            "in": "query",
            "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
            "required": false,
            "example": "{{workspaceId}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": {
                "collection": {
                  "info": {
                    "name": "{{collectionName}}",
                    "schema": "{{collectionSchemaUrl}}"
                  },
                  "item": [
                    {
                      "request": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ]
                    }
                  },
                  "required": [
                    "collection"
                  ]
                },
                "example": {
                  "collection": {
                    "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                    "name": "Test Collection",
                    "uid": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "item": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "item",
                            "id"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "instanceFoundError",
                    "message": "The specified item already exists.",
                    "details": {
                      "item": "collection",
                      "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          },
          "x-400:Malformed Request": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "malformedRequestError",
                    "message": "Found 1 errors with the supplied collection.",
                    "details": [
                      ": must have required property 'info'"
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "Get all collections",
        "deprecated": false,
        "description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections.",
        "tags": [],
        "parameters": [
          {
            "name": "workspace",
            "in": "query",
            "description": "Optional. A workspace ID.",
            "required": false,
            "example": "{{workspaceId}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "uid": {
                            "type": "string"
                          },
                          "isPublic": {
                            "type": "boolean"
                          },
                          "fork": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "from": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "label",
                              "createdAt",
                              "from"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "owner",
                          "createdAt",
                          "updatedAt",
                          "uid",
                          "isPublic"
                        ]
                      }
                    }
                  },
                  "required": [
                    "collections"
                  ]
                },
                "example": {
                  "collections": [
                    {
                      "id": "dac5eac9-148d-a32e-b76b-3edee9da28f7",
                      "name": "Cloud API",
                      "owner": "12345678",
                      "createdAt": "2022-04-12T10:29:46.000Z",
                      "updatedAt": "2022-04-12T10:29:56.000Z",
                      "uid": "12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7",
                      "isPublic": true
                    },
                    {
                      "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                      "name": "Test Collection",
                      "owner": "12345678",
                      "createdAt": "2022-01-13T10:21:46.000Z",
                      "updatedAt": "2022-02-12T11:29:56.000Z",
                      "uid": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
                      "isPublic": false,
                      "fork": {
                        "label": "Test Fork",
                        "createdAt": "2022-06-16T19:51:44.069Z",
                        "from": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                      }
                    },
                    {
                      "id": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
                      "name": "Postman Echo",
                      "owner": "12345678",
                      "createdAt": "2021-04-11T09:18:26.000Z",
                      "updatedAt": "2022-05-01T15:29:32.000Z",
                      "uid": "12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65",
                      "isPublic": true
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          },
          "x-200:Filter by Workspace": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "uid": {
                            "type": "string"
                          },
                          "isPublic": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "collections"
                  ]
                },
                "example": {
                  "collections": [
                    {
                      "id": "dac5eac9-148d-a32e-b76b-3edee9da28f7",
                      "name": "Cloud API",
                      "owner": "12345678",
                      "createdAt": "2022-04-12T10:29:46.000Z",
                      "updatedAt": "2022-04-12T10:29:56.000Z",
                      "uid": "12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7",
                      "isPublic": true
                    }
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/collections/collectionId": {
      "get": {
        "summary": "Get a collection",
        "deprecated": false,
        "description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).",
        "tags": [],
        "parameters": [
          {
            "name": "access_key",
            "in": "query",
            "description": "Optional. A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.",
            "required": false,
            "example": "{{accessKey}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "info": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "_postman_id": {
                              "type": "string"
                            },
                            "schema": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "fork": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "from": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "label",
                                "createdAt",
                                "from"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "description",
                            "_postman_id",
                            "schema",
                            "updatedAt",
                            "fork"
                          ]
                        },
                        "item": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "event": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "listen": {
                                      "type": "string"
                                    },
                                    "script": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "exec": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "exec",
                                        "type"
                                      ]
                                    }
                                  }
                                }
                              },
                              "request": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "method": {
                                    "type": "string"
                                  },
                                  "header": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "url",
                                  "method",
                                  "header"
                                ]
                              },
                              "response": {
                                "type": "array",
                                "items": {}
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "info",
                        "item"
                      ]
                    }
                  },
                  "required": [
                    "collection"
                  ]
                },
                "example": {
                  "collection": {
                    "info": {
                      "name": "Test Collection",
                      "description": "This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                      "_postman_id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                      "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
                      "updatedAt": "2022-06-16T20:21:13.000Z",
                      "fork": {
                        "label": "Test Fork",
                        "createdAt": "2022-06-16T19:51:44.069Z",
                        "from": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                      }
                    },
                    "item": [
                      {
                        "name": "Test GET Response",
                        "id": "82ee981b-e19f-962a-401e-ea34ebfb4848",
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "7d2334fc-a84a-4c3d-b26c-7529afa4c0ae",
                              "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "request": {
                          "url": "https://echo.getpostman.com/headers",
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ]
                        },
                        "response": []
                      }
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "instanceNotFoundError",
                    "message": "We could not find the collection you are looking for"
                  }
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          },
          "x-200:Get Collection with Access Token": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "info": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "_postman_id": {
                              "type": "string"
                            },
                            "schema": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "fork": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "from": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "label",
                                "createdAt",
                                "from"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "description",
                            "_postman_id",
                            "schema",
                            "updatedAt",
                            "fork"
                          ]
                        },
                        "item": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "event": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "listen": {
                                      "type": "string"
                                    },
                                    "script": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "exec": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "exec",
                                        "type"
                                      ]
                                    }
                                  }
                                }
                              },
                              "request": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "method": {
                                    "type": "string"
                                  },
                                  "header": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "url",
                                  "method",
                                  "header"
                                ]
                              },
                              "response": {
                                "type": "array",
                                "items": {}
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "info",
                        "item"
                      ]
                    }
                  },
                  "required": [
                    "collection"
                  ]
                },
                "example": {
                  "collection": {
                    "info": {
                      "name": "Test Collection",
                      "description": "This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                      "_postman_id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                      "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
                      "updatedAt": "2022-06-16T20:21:13.000Z",
                      "fork": {
                        "label": "Test Fork",
                        "createdAt": "2022-06-16T19:51:44.069Z",
                        "from": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                      }
                    },
                    "item": [
                      {
                        "name": "Test GET Response",
                        "id": "82ee981b-e19f-962a-401e-ea34ebfb4848",
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "7d2334fc-a84a-4c3d-b26c-7529afa4c0ae",
                              "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "request": {
                          "url": "https://echo.getpostman.com/headers",
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ]
                        },
                        "response": []
                      }
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete a collection",
        "deprecated": false,
        "description": "Deletes a collection.",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "uid"
                      ]
                    }
                  },
                  "required": [
                    "collection"
                  ]
                },
                "example": {
                  "collection": {
                    "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                    "uid": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "item": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "item",
                            "id"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "instanceNotFoundError",
                    "message": "The specified item does not exist.",
                    "details": {
                      "item": "collection",
                      "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update a collection",
        "deprecated": false,
        "description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": {
                "collection": {
                  "info": {
                    "name": "{{collectionName}}",
                    "schema": "{{collectionSchemaUrl}}"
                  },
                  "item": [
                    {
                      "request": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ]
                    }
                  },
                  "required": [
                    "collection"
                  ]
                },
                "example": {
                  "collection": {
                    "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2",
                    "name": "Test Collection",
                    "uid": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "malformedRequestError",
                    "message": "Found 2 errors with the supplied collection.",
                    "details": [
                      ": must have required property 'item'",
                      "info: must have required property 'schema'"
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "forbiddenError",
                    "message": "You do not have enough permissions to perform this action."
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "item": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "item",
                            "id"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "instanceNotFoundError",
                    "message": "The specified item does not exist.",
                    "details": {
                      "item": "collection",
                      "id": "12ece9e1-2abf-4edc-8e34-de66e74114d2"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                },
                "example": {
                  "error": "rateLimited",
                  "message": "Rate limit exceeded. Please retry after 1669048687"
                }
              }
            },
            "headers": {}
          },
          "x-400:Collection ID Mismatch": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "name": "collectionMismatchError",
                    "message": "The collection ID in the path does not match the collection ID in the request body."
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/": {
      "mmmmmm": {
        "summary": "sad",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {}
  },
  "servers": [],
  "security": []
}